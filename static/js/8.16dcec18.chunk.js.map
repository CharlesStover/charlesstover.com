{"version":3,"sources":["components/package-description-paragraph/package-description-paragraph.module.scss","components/package-description-paragraph/package-description-paragraph.view.tsx","constants/package-descriptions.tsx","components/package-description/package-description.view.tsx","filter/filter-default-package.ts","constants/package-dependencies.ts","map/map-package-name-to-repository-name.ts","reduce/reduce-array-to-sum.ts","map/map-npm-downloads-entry-to-packages-table-item.ts","components/packages-table-explicit-downloads-cell/packages-table-explicit-downloads-cell.view.tsx","components/emphasize-substring/emphasize-substring.view.tsx","components/packages-table-name-cell/packages-table-name-cell.view.tsx","components/packages-table-name-cell/packages-table-name-cell.hook.ts","components/packages-table-total-downloads-cell/packages-table-total-downloads-cell.view.tsx","components/packages-table/packages-table.hook.column-definitions.tsx","components/packages-table/packages-table.hook.count-text.ts","components/packages-table/packages-table.hook.page-size-preference.ts","components/packages-table/packages-table.hook.visible-content-preference.ts","components/packages-table/packages-table.hook.wrap-lines-preference.ts","components/packages-table/packages-table.hook.ts","components/packages-table/packages-table.view.tsx"],"names":["module","exports","PackageDescriptionParagraph","children","className","styles","root","color","fontSize","variant","PACKAGE_DESCRIPTIONS","Map","PackageDescription","packageName","description","get","Array","isArray","map","paragraph","index","filterDefaultPackage","PACKAGE_DEPENDENCIES","mapPackageNameToRepositoryName","reduceArrayToSum","sum","item","mapNpmDownloadsEntryToPackagesTableItem","downloads","_index","entries","totalDownloads","reduce","explicitDownloads","dependentPackageName","dependencies","dependency","findDependentEntry","entryPackageName","dependentEntry","find","dependentDownloads","isHighlighted","repositoryName","PackagesTableExplicitDownloadsCell","float","EmphasizeSubstring","length","substring","PackagesTableNameCell","filteringText","href","useMemo","indexOf","usePackagesTableNameCell","target","PackagesTableTotalDownloadsCell","useColumnDefinitions","translate","useTranslate","header","id","minWidth","sortingField","width","cell","maxWidth","useCountText","count","PAGE_SIZES","usePageSizePreference","title","options","value","label","toString","useVisibleContentPreference","useWrapLinesPreference","DEFAULT_VISIBLE_CONTENT","PackagesTable","cancelLabel","collectionPreferencesTitle","columnDefinitions","confirmLabel","countText","currentPageIndex","filteringAriaLabel","filteringPlaceholder","handleCollectionPreferencesConfirm","handlePaginationChange","handleSortingChange","handleTextFilterChange","items","loading","loadingText","pageSizePreference","pagesCount","preferences","ref","sortingColumn","sortingDescending","visibleContent","visibleContentPreference","wrapLines","wrapLinesPreference","data","isLoading","useNpmDownloads","useRef","handleConfirm","pageSize","useCollectionPreferences","defaultPageSize","defaultVisibleContent","handleChange","paginate","usePagination","sort","useTable","defaultSortingColumn","defaultSortingDescending","useTextFilter","Object","filter","filteredItems","visibleItems","newVisibleItems","useAwsuiTableItemDescription","Component","colSpan","filteredItemsCount","Math","ceil","usePackagesTable","onSortingChange","resizableColumns","stickyHeader","trackBy","visibleColumns","onChange","pagination","onConfirm"],"mappings":"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","file":"static/js/8.16dcec18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"package-description-paragraph_root__2TK2U\"};","import Box from '@awsui/components-react/box';\nimport { PropsWithChildren, ReactElement } from 'react';\nimport styles from './package-description-paragraph.module.scss';\n\nexport default function PackageDescriptionParagraph({\n  children,\n}: PropsWithChildren<unknown>): ReactElement {\n  return (\n    <Box\n      className={styles.root}\n      color=\"text-body-secondary\"\n      fontSize=\"body-s\"\n      variant=\"p\"\n    >\n      {children}\n    </Box>\n  );\n}\n","import { ReactNode } from 'react';\n\nconst PACKAGE_DESCRIPTIONS: Map<string, ReactNode> = new Map<string, ReactNode>(\n  [\n    [\n      '@charlesstover/hsl2rgb',\n      'This package allows you to manage color values easily as HSL (hue, saturation, and lightness), then output them as RGB (red, green, and blue).',\n    ],\n    [\n      '@gamingmedley/konami.js',\n      'Attach event listeners for when users press ⬆, ⬆, ⬇, ⬇, ⬅, ➡, ⬅, ➡, 🅱, 🅰, Enter.',\n    ],\n    [\n      'awsui-dark-mode',\n      'Ease your eyes by applying a dark mode theme to all child AWS UI components.',\n    ],\n    [\n      'awsui-theme',\n      \"Easily apply your brand's theme to your AWS UI components.\",\n    ],\n    [\n      'deep-proxy-polyfill',\n      'Polyfills the Proxy class for deep/recursive object attributes.',\n    ],\n    [\n      'delimiter',\n      'Placing delimiters between items in an array is useful for automating and enforcing Oxford commas.',\n    ],\n    [\n      'fetch-suspense',\n      'The fetch-suspense package integrates React Suspense with the Fetch API.',\n    ],\n    [\n      'lazy-i18n',\n      'Support internationalization for multiple languages by asynchronously loading key-value pair translation files.',\n    ],\n    [\n      'logs-insights-hash',\n      'Given a list of log groups, generate the URL hash for CloudWatch Logs Insights.',\n    ],\n    [\n      'mssql-query-builder',\n      'Dynamically build Microsoft SQL Server queries using JavaScript.',\n    ],\n    [\n      'number-format-react',\n      'Enable language-sensitive number formatting through a React component.',\n    ],\n    [\n      'pluralsight-score',\n      'Mimic the Pluralsight Score IQ graph with a React component.',\n    ],\n    [\n      'rainbow-gradient',\n      'The rainbow-gradient package generates a gradient of colors with any saturation or lightness.',\n    ],\n    [\n      'react-capsule',\n      'Share your global React state between components without managing yet another React context.',\n    ],\n    [\n      'react-innertext',\n      'Dynamically converting the visible text of any JSX element or React node to a string allows the automation of stricter component values, such as HTML alt and title attributes.',\n    ],\n    [\n      'react-mui-tooltip',\n      'Create React tooltips similar to those used by Material-UI.',\n    ],\n    [\n      'react-multi-context',\n      'Mounting multiple React contexts using a record of key-value pairs decreases the identention that occurs at the root of an application with a large shared state.',\n    ],\n    [\n      'react-quotes-carousel',\n      'Display quotes in a carousel with a React component.',\n    ],\n    [\n      'react-rainbow-text',\n      'This component displays a text string that gradients in color.',\n    ],\n    [\n      'react-sparkline-svg',\n      'Render sparklines as SVGs with a React component.',\n    ],\n    [\n      'reactn',\n      'ReactN is an extension of React with a built-in global state management API.',\n    ],\n    [\n      'reactn-devtools',\n      \"The ReactN DevTools display an application's ReactN global state in the Redux DevTools browser extension.\",\n    ],\n    [\n      'rn-webview',\n      'This alternative to the React Native WebView component fixes window.postMessage on iOS devices.',\n    ],\n    [\n      'sparkline-svg',\n      'Generating a sparkline as an SVG image allows user interfaces to dynamically chart values, even as background images.',\n    ],\n    [\n      'use-awsui',\n      \"By instantiating your components' local state with this library, you can save repetitive boilerplate surrounding state instantiation and event handlers.\",\n    ],\n    [\n      'use-awsui-router',\n      'In addition to managing the AWS UI component local state, these hooks bind to React Router.',\n    ],\n    [\n      'use-awsui-table-item-description',\n      'Append a full-width row to each item in an AWS UI table.',\n    ],\n    [\n      'use-clippy',\n      \"Allowing components to read from and write to the user's clipboard produces convenient UI components, like Copy buttons, with intelligent and responsive features.\",\n    ],\n    ['use-ctrl-key', 'Listen to Ctrl key events with React hooks.'],\n    [\n      'use-dimensions',\n      'Coupling components to the React Native Dimensions API produces a live application that is responsive to customer behavior.',\n    ],\n    [\n      'use-force-update',\n      [\n        'Analogous to the forceUpdate method of class components, this React hook forces a function component to re-render.',\n        'This assists developers in deprecating their class components in favor of hooks.',\n      ],\n    ],\n    ['use-key-down', 'Listen to key down events with React hooks.'],\n    ['use-mouse-move', 'Listen to mouse move events with a React hook.'],\n    ['use-offline', 'Listen to network connectivity events with a React hook.'],\n    [\n      'use-page-transition',\n      'Listen for page transition (visibility and persistence) events with a React hook.',\n    ],\n    [\n      'use-react-router',\n      'This React hook reads the react-router state and re-renders on page navigation events.',\n    ],\n    ['use-shift-key', 'Listen to Shift key events with a React hook.'],\n    [\n      'use-update-effect',\n      'Mimic the behavior of componentDidUpdate in function components, after the render is painted.',\n    ],\n    [\n      'use-update-layout-effect',\n      'Mimic the behavior of componentDidUpdate in function components, before the render is painted.',\n    ],\n    [\n      'with-router',\n      'This higher-order component re-renders your components when the route changes.',\n    ],\n  ],\n);\n\nexport default PACKAGE_DESCRIPTIONS;\n","import { ReactElement, ReactNode } from 'react';\nimport Paragraph from '../../components/package-description-paragraph';\nimport PACKAGE_DESCRIPTIONS from '../../constants/package-descriptions';\nimport Item from '../../types/packages-table-item';\n\nexport default function PackageDescription({\n  packageName,\n}: Item): null | ReactElement {\n  const description: ReactNode | undefined = PACKAGE_DESCRIPTIONS.get(\n    packageName,\n  );\n\n  if (typeof description === 'undefined') {\n    return null;\n  }\n\n  if (Array.isArray(description)) {\n    return (\n      <>\n        {description.map(\n          (paragraph: ReactNode, index: number): ReactElement => {\n            return <Paragraph key={index}>{paragraph}</Paragraph>;\n          },\n        )}\n      </>\n    );\n  }\n\n  return <Paragraph>{description}</Paragraph>;\n}\n","import PackagesTableItem from '../types/packages-table-item';\n\nexport default function filterDefaultPackage({\n  packageName,\n}: PackagesTableItem): boolean {\n  return packageName !== '@';\n}\n","/*\nPackage dependencies define which of my own packages depend on my own packages.\n  These are used to calculate \"explicit\" downloads. For example, ReactN depends\n  on use-force-update. This means that every 1 download of ReactN also results\n  in 1 download of use-force-update. By substracting the download count of\n  ReactN from the download count of use-force-update, we can calculate the total\n  number of downloads requested for use-force-update explicitly.\n*/\n\nconst PACKAGE_DEPENDENCIES: Map<string, string[]> = new Map([\n  ['awsui-dark-mode', ['awsui-theme']],\n  ['fetch-suspense', ['deep-equal']],\n  ['rainbow-gradient', ['@charlesstover/hsl2rgb']],\n  ['react-capsule', ['use-force-update']],\n  ['react-rainbow-text', ['@charlesstover/hsl2rgb', 'rainbow-gradient']],\n  ['react-sparkline-svg', ['sparkline-svg']],\n  ['reactn', ['use-force-update']],\n  ['use-react-router', ['use-force-update']],\n]);\n\nexport default PACKAGE_DEPENDENCIES;\n","export default function mapPackageNameToRepositoryName(\n  packageName: string,\n): string {\n  switch (packageName) {\n    case '@gamingmedley/konami.js':\n      return 'konami-js';\n    case '@charlesstover/hsl2rgb':\n      return 'hsl2rgb-js';\n    case 'pluralsight-score':\n      return 'react-pluralsight-score';\n    default:\n      return packageName;\n  }\n}\n","export default function reduceArrayToSum(sum: number, item: number): number {\n  return sum + item;\n}\n","import PACKAGE_DEPENDENCIES from '../constants/package-dependencies';\nimport mapPackageNameToRepositoryName from '../map/map-package-name-to-repository-name';\nimport reduceArrayToSum from '../reduce/reduce-array-to-sum';\nimport PackagesTableItem from '../types/packages-table-item';\n\nexport default function mapNpmDownloadsEntryToPackagesTableItem(\n  [packageName, downloads]: [string, number[]],\n  _index: number,\n  entries: [string, number[]][],\n): PackagesTableItem {\n  const totalDownloads: number = downloads.reduce(reduceArrayToSum, 0);\n  let explicitDownloads: number = totalDownloads;\n  for (const [\n    dependentPackageName,\n    dependencies,\n  ] of PACKAGE_DEPENDENCIES.entries()) {\n    for (const dependency of dependencies) {\n      if (dependency !== packageName) {\n        continue;\n      }\n      const findDependentEntry = ([entryPackageName]: [\n        string,\n        number[],\n      ]): boolean => entryPackageName === dependentPackageName;\n      const dependentEntry: [string, number[]] | undefined = entries.find(\n        findDependentEntry,\n      );\n      if (typeof dependentEntry === 'undefined') {\n        break;\n      }\n      const [, dependentDownloads] = dependentEntry;\n      explicitDownloads -= dependentDownloads.reduce(reduceArrayToSum, 0);\n      break;\n    }\n  }\n  return {\n    downloads,\n    explicitDownloads,\n    isHighlighted: false,\n    packageName,\n    repositoryName: mapPackageNameToRepositoryName(packageName),\n    totalDownloads,\n  };\n}\n","import Box from '@awsui/components-react/box';\nimport NumberFormat from 'number-format-react';\nimport { ReactElement } from 'react';\nimport Item from '../../types/packages-table-item';\n\nexport default function PackagesTableExplicitDownloadsCell({\n  explicitDownloads,\n}: Item): ReactElement {\n  return (\n    <Box float=\"right\">\n      <NumberFormat>{explicitDownloads}</NumberFormat>\n    </Box>\n  );\n}\n","import { ReactElement } from 'react';\n\ninterface Props {\n  children: string;\n  index: number;\n  length: number;\n}\n\nexport default function EmphasizeSubstring({\n  children,\n  index,\n  length,\n}: Props): ReactElement {\n  if (index === -1) {\n    return <>{children}</>;\n  }\n\n  return (\n    <>\n      {children.substring(0, index)}\n      <strong>{children.substring(index, index + length)}</strong>\n      {children.substring(index + length)}\n    </>\n  );\n}\n","import Link from '@awsui/components-react/link';\nimport { ReactElement } from 'react';\nimport EmphasizeSubstring from '../../components/emphasize-substring';\nimport Item from '../../types/packages-table-item';\nimport usePackagesTableNameCell from './packages-table-name-cell.hook';\n\ninterface Props extends Item {\n  filteringText: string;\n}\n\nexport default function PackagesTableNameCell({\n  filteringText,\n  packageName,\n  repositoryName,\n}: Props): ReactElement {\n  const { href, index } = usePackagesTableNameCell({\n    filteringText,\n    packageName,\n    repositoryName,\n  });\n\n  return (\n    <Link href={href} target=\"_blank\">\n      <EmphasizeSubstring index={index} length={filteringText.length}>\n        {packageName}\n      </EmphasizeSubstring>\n    </Link>\n  );\n}\n","import { useMemo } from 'react';\n\ninterface Props {\n  filteringText: string;\n  packageName: string;\n  repositoryName: string;\n}\n\ninterface State {\n  href: string;\n  index: number;\n}\n\nexport default function usePackagesTableNameCell({\n  filteringText,\n  packageName,\n  repositoryName,\n}: Props): State {\n  return {\n    href: `https://github.com/CharlesStover/${repositoryName}`,\n\n    index: useMemo((): number => {\n      if (filteringText === '') {\n        return -1;\n      }\n      return packageName.indexOf(filteringText);\n    }, [filteringText, packageName]),\n  };\n}\n","import Box from '@awsui/components-react/box';\nimport NumberFormat from 'number-format-react';\nimport { ReactElement } from 'react';\nimport Item from '../../types/packages-table-item';\n\nexport default function PackagesTableTotalDownloadsCell({\n  totalDownloads,\n}: Item): ReactElement {\n  return (\n    <Box float=\"right\">\n      <NumberFormat>{totalDownloads}</NumberFormat>\n    </Box>\n  );\n}\n","import { TableProps } from '@awsui/components-react/table';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { ReactElement, useMemo } from 'react';\nimport ExplicitDownloads from '../../components/packages-table-explicit-downloads-cell';\nimport PackageName from '../../components/packages-table-name-cell';\nimport TotalDownloads from '../../components/packages-table-total-downloads-cell';\nimport PackagesTableItem from '../../types/packages-table-item';\n\ninterface Props {\n  filteringText: string;\n}\n\nexport default function useColumnDefinitions({\n  filteringText,\n}: Props): TableProps.ColumnDefinition<PackagesTableItem>[] {\n  const translate: TranslateFunction = useTranslate();\n\n  return useMemo(\n    (): TableProps.ColumnDefinition<PackagesTableItem>[] => [\n      {\n        header: translate('Package name') || '...',\n        id: 'packageName',\n        minWidth: 240,\n        sortingField: 'packageName',\n        width: 320,\n        cell(item: PackagesTableItem): ReactElement {\n          return <PackageName {...item} filteringText={filteringText} />;\n        },\n      },\n\n      {\n        header: translate('Total downloads') || '...',\n        id: 'totalDownloads',\n        maxWidth: 240,\n        minWidth: 180,\n        sortingField: 'totalDownloads',\n        width: 240,\n        cell(item: PackagesTableItem): ReactElement {\n          return <TotalDownloads {...item} />;\n        },\n      },\n\n      {\n        header: translate('Explicit downloads') || '...',\n        id: 'explicitDownloads',\n        maxWidth: 240,\n        minWidth: 180,\n        sortingField: 'explicitDownloads',\n        width: 240,\n        cell(item: PackagesTableItem): ReactElement {\n          return <ExplicitDownloads {...item} />;\n        },\n      },\n    ],\n    [filteringText, translate],\n  );\n}\n","import { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useMemo } from 'react';\n\nexport default function useCountText(count: number): string {\n  const translate: TranslateFunction = useTranslate();\n\n  return useMemo((): string => {\n    if (count === 0) {\n      return translate('No matches') || '...';\n    }\n    if (count === 1) {\n      return translate('1 match') || '...';\n    }\n    return translate('$count matches', { count }) || '...';\n  }, [count, translate]);\n}\n","import { CollectionPreferencesProps } from '@awsui/components-react/collection-preferences';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useMemo } from 'react';\n\nconst PAGE_SIZES: number[] = [5, 10, 20, 50];\n\nexport default function usePageSizePreference(): CollectionPreferencesProps.PageSizePreference {\n  const translate: TranslateFunction = useTranslate();\n\n  return useMemo((): CollectionPreferencesProps.PageSizePreference => {\n    const mapNumberToPageSizeOption = (\n      value: number,\n    ): CollectionPreferencesProps.PageSizeOption => ({\n      label: translate('$count packages', { count: value }) || value.toString(),\n      value,\n    });\n\n    return {\n      title: translate('Select page size.') || '...',\n      options: PAGE_SIZES.map(mapNumberToPageSizeOption),\n    };\n  }, [translate]);\n}\n","import { CollectionPreferencesProps } from '@awsui/components-react/collection-preferences';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useMemo } from 'react';\n\nexport default function useVisibleContentPreference(): CollectionPreferencesProps.VisibleContentPreference {\n  const translate: TranslateFunction = useTranslate();\n\n  return useMemo(\n    (): CollectionPreferencesProps.VisibleContentPreference => ({\n      title: translate('Select visible columns.') || '...',\n      options: [\n        {\n          label: translate('Package properties') || '...',\n          options: [\n            {\n              id: 'packageName',\n              label: translate('Package name') || '...',\n            },\n            {\n              id: 'totalDownloads',\n              label: translate('Total downloads') || '...',\n            },\n            {\n              id: 'explicitDownloads',\n              label: translate('Explicit downloads') || '...',\n            },\n          ],\n        },\n      ],\n    }),\n    [translate],\n  );\n}\n","import { CollectionPreferencesProps } from '@awsui/components-react/collection-preferences';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useMemo } from 'react';\n\nexport default function useWrapLinesPreference(): CollectionPreferencesProps.WrapLinesPreference {\n  const translate: TranslateFunction = useTranslate();\n\n  return useMemo(\n    (): CollectionPreferencesProps.WrapLinesPreference => ({\n      description: translate('Select to wrap lines and see all text.') || '...',\n      label: translate('Wrap lines') || '...',\n    }),\n    [translate],\n  );\n}\n","import { CollectionPreferencesProps } from '@awsui/components-react/collection-preferences';\nimport { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { PaginationProps } from '@awsui/components-react/pagination';\nimport { TableProps } from '@awsui/components-react/table';\nimport { TextFilterProps } from '@awsui/components-react/text-filter';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { MutableRefObject, useMemo, useRef } from 'react';\nimport {\n  useCollectionPreferences,\n  usePagination,\n  useTable,\n  useTextFilter,\n} from 'use-awsui';\nimport useAwsuiTableItemDescription from 'use-awsui-table-item-description';\nimport PackageDescription from '../../components/package-description';\nimport filterDefaultPackage from '../../filter/filter-default-package';\nimport useNpmDownloads from '../../hooks/use-npm-downloads';\nimport mapNpmDownloadsEntryToPackagesTableItem from '../../map/map-npm-downloads-entry-to-packages-table-item';\nimport PackagesTableItem from '../../types/packages-table-item';\nimport useColumnDefinitions from './packages-table.hook.column-definitions';\nimport useCountText from './packages-table.hook.count-text';\nimport usePageSizePreference from './packages-table.hook.page-size-preference';\nimport useVisibleContentPreference from './packages-table.hook.visible-content-preference';\nimport useWrapLinesPreference from './packages-table.hook.wrap-lines-preference';\n\ninterface State {\n  cancelLabel: string;\n  collectionPreferencesTitle: string;\n  columnDefinitions: TableProps.ColumnDefinition<PackagesTableItem>[];\n  confirmLabel: string;\n  countText: string;\n  currentPageIndex: number;\n  filteringAriaLabel?: string;\n  filteringPlaceholder: string;\n  filteringText: string;\n  items: PackagesTableItem[];\n  loading: boolean;\n  loadingText: string;\n  pageSizePreference: CollectionPreferencesProps.PageSizePreference;\n  pagesCount: number;\n  preferences: CollectionPreferencesProps.Preferences;\n  ref: MutableRefObject<HTMLDivElement | null>;\n  sortingColumn?: TableProps.SortingColumn<PackagesTableItem>;\n  sortingDescending?: boolean;\n  visibleContent?: readonly string[];\n  visibleContentPreference: CollectionPreferencesProps.VisibleContentPreference;\n  wrapLines?: boolean;\n  wrapLinesPreference: CollectionPreferencesProps.WrapLinesPreference;\n  handleCollectionPreferencesConfirm(\n    event: NonCancelableCustomEvent<\n      CollectionPreferencesProps.Preferences<void>\n    >,\n  ): void;\n  handlePaginationChange(\n    event: NonCancelableCustomEvent<PaginationProps.ChangeDetail>,\n  ): void;\n  handleSortingChange(\n    event: NonCancelableCustomEvent<TableProps.SortingState<PackagesTableItem>>,\n  ): void;\n  handleTextFilterChange(\n    event: NonCancelableCustomEvent<TextFilterProps.ChangeDetail>,\n  ): void;\n}\n\nconst DEFAULT_PAGE_SIZE = 10;\nconst DEFAULT_VISIBLE_CONTENT: string[] = ['packageName', 'totalDownloads'];\n\nexport default function usePackagesTable(): State {\n  // Contexts\n  const { data, isLoading } = useNpmDownloads();\n  const ref: MutableRefObject<HTMLDivElement | null> = useRef(null);\n  const translate: TranslateFunction = useTranslate();\n\n  // States\n  const {\n    handleConfirm: handleCollectionPreferencesConfirm,\n    pageSize,\n    preferences,\n    visibleContent,\n    wrapLines,\n  } = useCollectionPreferences({\n    defaultPageSize: DEFAULT_PAGE_SIZE,\n    defaultVisibleContent: DEFAULT_VISIBLE_CONTENT,\n  });\n\n  const {\n    currentPageIndex,\n    handleChange: handlePaginationChange,\n    paginate,\n  } = usePagination({\n    pageSize,\n  });\n\n  const {\n    handleSortingChange,\n    sort,\n    sortingColumn,\n    sortingDescending,\n  } = useTable({\n    defaultSortingColumn: {\n      sortingField: 'totalDownloads',\n    },\n    defaultSortingDescending: true,\n  });\n\n  const {\n    filteringText,\n    handleChange: handleTextFilterChange,\n  } = useTextFilter();\n\n  const items: PackagesTableItem[] = useMemo((): PackagesTableItem[] => {\n    if (typeof data === 'undefined') {\n      return [];\n    }\n    const entries: [string, number[]][] = Object.entries(data);\n    return entries\n      .map(mapNpmDownloadsEntryToPackagesTableItem)\n      .filter(filterDefaultPackage);\n  }, [data]);\n\n  const filteredItems: PackagesTableItem[] = useMemo((): PackagesTableItem[] => {\n    const filter = ({ packageName }: PackagesTableItem): boolean =>\n      packageName.indexOf(filteringText) !== -1;\n    return items.filter(filter);\n  }, [filteringText, items]);\n\n  const visibleItems: PackagesTableItem[] = useMemo((): PackagesTableItem[] => {\n    const newVisibleItems: PackagesTableItem[] = [...filteredItems];\n    newVisibleItems.sort(sort);\n    return paginate(newVisibleItems);\n  }, [filteredItems, paginate, sort]);\n\n  useAwsuiTableItemDescription({\n    Component: PackageDescription,\n    colSpan: (visibleContent || DEFAULT_VISIBLE_CONTENT).length,\n    items: visibleItems,\n    ref,\n  });\n\n  const filteredItemsCount: number = filteredItems.length;\n  return {\n    cancelLabel: translate('Cancel') || '...',\n    collectionPreferencesTitle: translate('Preferences') || '...',\n    confirmLabel: translate('Confirm') || '...',\n    countText: useCountText(filteredItemsCount),\n    currentPageIndex,\n    filteringAriaLabel: translate('Filter packages'),\n    filteringPlaceholder: translate('Filter packages') || '...',\n    filteringText,\n    handleCollectionPreferencesConfirm,\n    handlePaginationChange,\n    handleSortingChange,\n    handleTextFilterChange,\n    items: visibleItems,\n    loading: isLoading,\n    loadingText: translate('Loading packages') || '...',\n    pagesCount: Math.ceil(items.length / (pageSize || DEFAULT_PAGE_SIZE)),\n    pageSizePreference: usePageSizePreference(),\n    preferences,\n    ref,\n    sortingColumn,\n    sortingDescending,\n    visibleContent,\n    visibleContentPreference: useVisibleContentPreference(),\n    wrapLines,\n    wrapLinesPreference: useWrapLinesPreference(),\n\n    columnDefinitions: useColumnDefinitions({\n      filteringText,\n    }),\n  };\n}\n","import CollectionPreferences from '@awsui/components-react/collection-preferences';\nimport Header from '@awsui/components-react/header';\nimport Pagination from '@awsui/components-react/pagination';\nimport Table from '@awsui/components-react/table';\nimport TextFilter from '@awsui/components-react/text-filter';\nimport I18n from 'lazy-i18n';\nimport { ReactElement } from 'react';\nimport usePackagesTable from './packages-table.hook';\n\nexport default function PackagesTable(): ReactElement {\n  const {\n    cancelLabel,\n    collectionPreferencesTitle,\n    columnDefinitions,\n    confirmLabel,\n    countText,\n    currentPageIndex,\n    filteringAriaLabel,\n    filteringText,\n    filteringPlaceholder,\n    handleCollectionPreferencesConfirm,\n    handlePaginationChange,\n    handleSortingChange,\n    handleTextFilterChange,\n    items,\n    loading,\n    loadingText,\n    pageSizePreference,\n    pagesCount,\n    preferences,\n    ref,\n    sortingColumn,\n    sortingDescending,\n    visibleContent,\n    visibleContentPreference,\n    wrapLines,\n    wrapLinesPreference,\n  } = usePackagesTable();\n\n  return (\n    <div ref={ref}>\n      <Table\n        columnDefinitions={columnDefinitions}\n        items={items}\n        loading={loading}\n        loadingText={loadingText}\n        // onRowClick={handleRowClick}\n        onSortingChange={handleSortingChange}\n        resizableColumns\n        sortingColumn={sortingColumn}\n        sortingDescending={sortingDescending}\n        stickyHeader\n        trackBy=\"packageName\"\n        visibleColumns={visibleContent}\n        wrapLines={wrapLines}\n        filter={\n          <TextFilter\n            countText={countText}\n            filteringAriaLabel={filteringAriaLabel}\n            filteringPlaceholder={filteringPlaceholder}\n            filteringText={filteringText}\n            onChange={handleTextFilterChange}\n          />\n        }\n        header={\n          <Header>\n            <I18n>Packages</I18n>\n          </Header>\n        }\n        pagination={\n          <Pagination\n            currentPageIndex={currentPageIndex}\n            onChange={handlePaginationChange}\n            pagesCount={pagesCount}\n          />\n        }\n        preferences={\n          <CollectionPreferences\n            cancelLabel={cancelLabel}\n            confirmLabel={confirmLabel}\n            onConfirm={handleCollectionPreferencesConfirm}\n            pageSizePreference={pageSizePreference}\n            preferences={preferences}\n            title={collectionPreferencesTitle}\n            visibleContentPreference={visibleContentPreference}\n            wrapLinesPreference={wrapLinesPreference}\n          />\n        }\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}