{"version":3,"sources":["constants/publication-card-definition.module.scss","components/publication-cards/publication-cards.module.scss","components/minutes/minutes.view.tsx","map/map-time-to-days-ago.ts","constants/publication-card-definition.tsx","constants/publication-cards-sort.ts","filter/filter-publication-card-items-by-minimum-views.ts","sort/sort-publication-card-items-by-publication-date.ts","sort/sort-publication-card-items-by-reactions.ts","sort/sort-publication-card-items-by-reactions-per-day.ts","sort/sort-publication-card-items-by-reactions-per-view.ts","sort/sort-publication-card-items-by-reading-time.ts","sort/sort-publication-card-items-by-views.ts","sort/sort-publication-card-items-by-views-per-day.ts","components/publication-cards/publication-cards.hook.ts","hooks/use-dev-stats.ts","hooks/use-medium-stats.ts","components/publication-cards/publication-cards.hook.sort-options.ts","components/publication-cards/publication-cards.hook.items.ts","map/map-publication-cards-sort-to-function.ts","components/publication-cards/publication-cards.view.tsx"],"names":["module","exports","Minutes","children","n","NOW","Date","now","mapTimeToDaysAgo","time","MILLISECONDS_PER_HOUR","PUBLICATION_CARD_DEFINITION","PublicationCardsSort","header","title","url","href","color","fontSize","sections","id","content","dateTime","image","reactions","readingTime","views","date","className","styles","bannerHeight","bannerWidth","alt","src","width","iconAriaLabel","type","popover","size","getFullYear","getMonth","getDate","columnLayout","columns","Math","round","filterPublicationCardItemsByMinimumViews","sortPublicationCardItemsByPublicationDate","a","b","sortPublicationCardItemsByReactions","sortPublicationCardItemsByReactionsPerDay","ad","an","bd","bn","sortPublicationCardItemsByReadingTime","sortPublicationCardItemsByViews","IS_ALERT_VISIBLE_CAPSULE","ReactCapsule","usePublicationCards","translate","useTranslate","isAlertVisible","setIsAlertVisible","useCapsule","data","devData","isLoading","isDevLoading","useQuery","async","response","fetch","json","mediumData","isMediumLoading","process","REACT_APP_MEDIUM_STATS","sortOptions","useMemo","label","value","PublicationDate","Reactions","ReactionsPerDay","ReactionsPerView","ReadingTime","Views","ViewsPerDay","useSortOptions","sort","setSort","useState","items","newItems","totalReactions","totalViews","slug","claps","firstPublishedAt","postId","previewImage","reads","updateNotificationSubscribers","upvotes","Object","entries","push","averageViewsPerReaction","canonical_url","comments_count","public_reactions_count","published_timestamp","social_image","findExistingItem","existingUrl","existingItem","find","getTime","useItems","dismissAriaLabel","loading","loadingText","sortPlaceholder","handleAlertDismiss","useCallback","handleSortChange","e","newSort","detail","selectedOption","sortItemsByPublicationDate","sortItemsByReactions","sortItemsByReactionsPerDay","sortItemsByReactionsPerView","sortItemsByReadingTime","sortItemsByViews","sortItemsByViewsPerDay","mapPublicationCardsSortToFunction","filter","selectedSortOption","PublicationCards","direction","dismissible","onDismiss","visible","cardDefinition","CARD_DEFINITION","actions","stretch","onChange","options","placeholder"],"mappings":"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","file":"static/js/7.8b56b764.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bannerHeight\":\"publication-card-definition_bannerHeight__3lcEB\",\"bannerWidth\":\"publication-card-definition_bannerWidth__3ZQqF\",\"columnLayout\":\"publication-card-definition_columnLayout__3jxQ7\",\"dateTime\":\"publication-card-definition_dateTime__29C0g\",\"popover\":\"publication-card-definition_popover__dPdLY\",\"reactions\":\"publication-card-definition_reactions__87qeN\",\"readingTime\":\"publication-card-definition_readingTime__1NHo7\",\"views\":\"publication-card-definition_views__1fGAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort\":\"publication-cards_sort__2Iiqm\"};","import I18n from 'lazy-i18n';\nimport { ReactElement } from 'react';\n\ninterface Props {\n  children: number;\n}\n\nexport default function Minutes({ children }: Props): ReactElement {\n  switch (children) {\n    case 1:\n      return <I18n>1 minute</I18n>;\n    default:\n      return <I18n n={children}>$n minutes</I18n>;\n  }\n}\n","const HOURS_PER_DAY = 24;\nconst MILLISECONDS_PER_SECOND = 1000;\nconst MINUTES_PER_HOUR = 60;\nconst NOW: number = Date.now();\nconst SECONDS_PER_MINUTE = 60;\nconst MILLISECONDS_PER_MINUTE = MILLISECONDS_PER_SECOND * SECONDS_PER_MINUTE;\nconst MILLISECONDS_PER_HOUR = MILLISECONDS_PER_MINUTE * MINUTES_PER_HOUR;\nconst MILLISECONDS_PER_DAY = MILLISECONDS_PER_HOUR * HOURS_PER_DAY;\n\nexport default function mapTimeToDaysAgo(time: number): number {\n  return (NOW - time) / MILLISECONDS_PER_DAY;\n}\n","import Badge from '@awsui/components-react/badge';\nimport Box from '@awsui/components-react/box';\nimport { CardsProps } from '@awsui/components-react/cards';\nimport ColumnLayout from '@awsui/components-react/column-layout';\nimport Link from '@awsui/components-react/link';\nimport Popover from '@awsui/components-react/popover';\nimport StatusIndicator from '@awsui/components-react/status-indicator';\nimport I18n from 'lazy-i18n';\nimport NumberFormat from 'number-format-react';\nimport { ReactElement } from 'react';\nimport Minutes from '../components/minutes';\nimport mapTimeToDaysAgo from '../map/map-time-to-days-ago';\nimport PublicationCardItem from '../types/publication-card-item';\nimport styles from './publication-card-definition.module.scss';\n\nconst PUBLICATION_CARD_DEFINITION: CardsProps<PublicationCardItem>['cardDefinition'] = {\n  header({ title, url }: PublicationCardItem): ReactElement {\n    return (\n      <Link href={url}>\n        <Box color=\"inherit\" fontSize=\"heading-m\">\n          {title}\n        </Box>\n      </Link>\n    );\n  },\n  sections: [\n    {\n      id: 'image',\n      content({\n        dateTime,\n        image,\n        reactions,\n        readingTime,\n        title,\n        url,\n        views,\n      }: PublicationCardItem): ReactElement {\n        const date: Date = new Date(dateTime);\n        return (\n          <div className={styles.bannerHeight}>\n            <div className={styles.bannerWidth}>\n              <Link href={url}>\n                {image ? (\n                  <img alt={title} src={image} width={320} />\n                ) : (\n                  <StatusIndicator iconAriaLabel=\"Warning\" type=\"warning\">\n                    {/* No translation needed. Only I should see this banner. */}\n                    Missing image\n                  </StatusIndicator>\n                )}\n              </Link>\n              <Badge className={styles.views}>\n                <Popover\n                  className={styles.popover}\n                  content={<I18n>Views</I18n>}\n                  size=\"small\"\n                >\n                  👁‍🗨 <NumberFormat>{views}</NumberFormat>\n                </Popover>\n              </Badge>\n              <Badge className={styles.reactions}>\n                <Popover\n                  className={styles.popover}\n                  content={<I18n>Reactions</I18n>}\n                  size=\"small\"\n                >\n                  <NumberFormat>{reactions}</NumberFormat> 👏\n                </Popover>\n              </Badge>\n              <Badge className={styles.dateTime}>\n                <Popover\n                  className={styles.popover}\n                  content={<I18n>Publication date</I18n>}\n                  size=\"small\"\n                >\n                  📅 {date.getFullYear()}-{date.getMonth() + 1}-{date.getDate()}\n                </Popover>\n              </Badge>\n              {readingTime && (\n                <Badge className={styles.readingTime}>\n                  <Popover\n                    className={styles.popover}\n                    content={<I18n>Reading time</I18n>}\n                    size=\"small\"\n                  >\n                    <Minutes>{readingTime}</Minutes> ⏳\n                  </Popover>\n                </Badge>\n              )}\n            </div>\n          </div>\n        );\n      },\n    },\n    {\n      id: 'stats',\n      // header: 'Statistics',\n      content({\n        dateTime,\n        reactions,\n        views,\n      }: PublicationCardItem): ReactElement {\n        return (\n          <ColumnLayout className={styles.columnLayout} columns={12}>\n            <div>\n              <Box color=\"text-label\" fontSize=\"heading-s\">\n                <I18n>Reactions/day</I18n>\n              </Box>\n              {Math.round((reactions / mapTimeToDaysAgo(dateTime)) * 100) / 100}\n            </div>\n            <div>\n              <Box color=\"text-label\" fontSize=\"heading-s\">\n                <I18n>Reactions/view</I18n>\n              </Box>\n              {Math.round((reactions / views) * 10000) / 100}%\n            </div>\n            <div>\n              <Box color=\"text-label\" fontSize=\"heading-s\">\n                <I18n>Views/day</I18n>\n              </Box>\n              {Math.round((views / mapTimeToDaysAgo(dateTime)) * 100) / 100}\n            </div>\n          </ColumnLayout>\n        );\n      },\n    },\n  ],\n};\n\nexport default PUBLICATION_CARD_DEFINITION;\n","enum PublicationCardsSort {\n  PublicationDate = 'publication-date',\n  Reactions = 'reactions',\n  ReactionsPerDay = 'reactions-per-day',\n  ReactionsPerView = 'reactions-per-view',\n  ReadingTime = 'reading-time',\n  Views = 'views',\n  ViewsPerDay = 'views-per-day',\n}\n\nexport default PublicationCardsSort;\n","import PublicationCardItem from '../types/publication-card-item';\n\nexport default function filterPublicationCardItemsByMinimumViews({\n  views,\n}: PublicationCardItem): boolean {\n  return views >= 5000;\n}\n","import PublicationCardItem from '../types/publication-card-item';\n\nexport default function sortPublicationCardItemsByPublicationDate(\n  { dateTime: a }: PublicationCardItem,\n  { dateTime: b }: PublicationCardItem,\n): -1 | 0 | 1 {\n  if (a < b) {\n    return 1;\n  }\n  if (a > b) {\n    return -1;\n  }\n  return 0;\n}\n","import PublicationCardItem from '../types/publication-card-item';\n\nexport default function sortPublicationCardItemsByReactions(\n  { reactions: a }: PublicationCardItem,\n  { reactions: b }: PublicationCardItem,\n): -1 | 0 | 1 {\n  if (a < b) {\n    return 1;\n  }\n  if (a > b) {\n    return -1;\n  }\n  return 0;\n}\n","import PublicationCardItem from '../types/publication-card-item';\n\nconst NOW: number = Date.now();\n\nexport default function sortPublicationCardItemsByReactionsPerDay(\n  { dateTime: ad, reactions: an }: PublicationCardItem,\n  { dateTime: bd, reactions: bn }: PublicationCardItem,\n): -1 | 0 | 1 {\n  const a: number = an / (NOW - ad);\n  const b: number = bn / (NOW - bd);\n  if (a < b) {\n    return 1;\n  }\n  if (a > b) {\n    return -1;\n  }\n  return 0;\n}\n","import PublicationCardItem from '../types/publication-card-item';\n\nexport default function sortPublicationCardItemsByReactionsPerDay(\n  { reactions: an, views: ad }: PublicationCardItem,\n  { reactions: bn, views: bd }: PublicationCardItem,\n): -1 | 0 | 1 {\n  const a: number = an / ad;\n  const b: number = bn / bd;\n  if (a < b) {\n    return 1;\n  }\n  if (a > b) {\n    return -1;\n  }\n  return 0;\n}\n","import PublicationCardItem from '../types/publication-card-item';\n\nexport default function sortPublicationCardItemsByReadingTime(\n  { readingTime: a }: PublicationCardItem,\n  { readingTime: b }: PublicationCardItem,\n): -1 | 0 | 1 {\n  if (typeof a === 'undefined') {\n    if (typeof b === 'undefined') {\n      return 0;\n    }\n    return 1;\n  } else if (typeof b === 'undefined') {\n    return -1;\n  }\n  if (a < b) {\n    return 1;\n  }\n  if (a > b) {\n    return -1;\n  }\n  return 0;\n}\n","import PublicationCardItem from '../types/publication-card-item';\n\nexport default function sortPublicationCardItemsByViews(\n  { views: a }: PublicationCardItem,\n  { views: b }: PublicationCardItem,\n): -1 | 0 | 1 {\n  if (a < b) {\n    return 1;\n  }\n  if (a > b) {\n    return -1;\n  }\n  return 0;\n}\n","import PublicationCardItem from '../types/publication-card-item';\n\nconst NOW: number = Date.now();\n\nexport default function sortPublicationCardItemsByReactionsPerDay(\n  { dateTime: ad, views: an }: PublicationCardItem,\n  { dateTime: bd, views: bn }: PublicationCardItem,\n): -1 | 0 | 1 {\n  const a: number = an / (NOW - ad);\n  const b: number = bn / (NOW - bd);\n  if (a < b) {\n    return 1;\n  }\n  if (a > b) {\n    return -1;\n  }\n  return 0;\n}\n","import { AlertProps } from '@awsui/components-react/alert';\nimport { CardsProps } from '@awsui/components-react/cards';\nimport { NonCancelableCustomEvent } from '@awsui/components-react/internal/events';\nimport { SelectProps } from '@awsui/components-react/select';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useCallback, useMemo, useState } from 'react';\nimport ReactCapsule, { useCapsule } from 'react-capsule';\nimport PublicationCardsSort from '../../constants/publication-cards-sort';\nimport filterPublicationCardItemsByMinimumViews from '../../filter/filter-publication-card-items-by-minimum-views';\nimport useDevStats from '../../hooks/use-dev-stats';\nimport useMediumStats from '../../hooks/use-medium-stats';\nimport mapPublicationCardsSortToFunction from '../../map/map-publication-cards-sort-to-function';\nimport PublicationCardItem from '../../types/publication-card-item';\nimport useItems from './publication-cards.hook.items';\nimport useSortOptions from './publication-cards.hook.sort-options';\n\ninterface State {\n  dismissAriaLabel?: string;\n  handleAlertDismiss: AlertProps['onDismiss'];\n  handleSortChange: SelectProps['onChange'];\n  isAlertVisible: boolean;\n  items: CardsProps<PublicationCardItem>['items'];\n  loading: CardsProps<PublicationCardItem>['loading'];\n  loadingText?: string;\n  selectedSortOption: SelectProps.Option;\n  sortOptions: SelectProps.Options;\n  sortPlaceholder?: string;\n}\n\nconst IS_ALERT_VISIBLE_CAPSULE: ReactCapsule<boolean> = new ReactCapsule<boolean>(\n  true,\n);\n\nexport default function usePublicationCards(): State {\n  // Contexts\n  const translate: TranslateFunction = useTranslate();\n\n  const [isAlertVisible, setIsAlertVisible] = useCapsule(\n    IS_ALERT_VISIBLE_CAPSULE,\n  );\n\n  const {\n    data: devData,\n    // error: devError,\n    isLoading: isDevLoading,\n    // refetch: refetchDev,\n  } = useDevStats();\n\n  const {\n    data: mediumData,\n    // error: mediumError,\n    isLoading: isMediumLoading,\n    // refetch: refetchMedium,\n  } = useMediumStats();\n\n  // States\n  const sortOptions: SelectProps.Options = useSortOptions();\n  const [sort, setSort] = useState(PublicationCardsSort.ViewsPerDay);\n\n  const items: PublicationCardItem[] = useItems({\n    devData,\n    mediumData,\n  });\n\n  return {\n    dismissAriaLabel: translate('Dismiss'),\n    isAlertVisible,\n    loading: isDevLoading || isMediumLoading,\n    loadingText: translate('Loading publications'),\n    sortOptions,\n    sortPlaceholder: translate('Sort by'),\n\n    handleAlertDismiss: useCallback((): void => {\n      setIsAlertVisible(false);\n    }, [setIsAlertVisible]),\n\n    handleSortChange: useCallback(\n      (e: NonCancelableCustomEvent<SelectProps.ChangeDetail>): void => {\n        const newSort: PublicationCardsSort = e.detail.selectedOption\n          .value as PublicationCardsSort;\n        setSort(newSort);\n      },\n      [],\n    ),\n\n    items: useMemo((): PublicationCardItem[] => {\n      const newItems: PublicationCardItem[] = [...items];\n      newItems.sort(mapPublicationCardsSortToFunction(sort));\n      return newItems.filter(filterPublicationCardItemsByMinimumViews);\n    }, [items, sort]),\n\n    selectedSortOption: useMemo((): SelectProps.Option => {\n      const findSelectedSortOption = ({ value }: SelectProps.Option): boolean =>\n        value === sort;\n      // Since `sort` is a Sort enum value and all Sort enum values have a sort\n      //   option, we can assert that we found this sort option.\n      return sortOptions.find(findSelectedSortOption) as SelectProps.Option;\n    }, [sort, sortOptions]),\n  };\n}\n","import { UseQueryResult, useQuery } from 'react-query';\nimport DevArticle from '../types/dev-article';\n\nexport default function useDevStats(): UseQueryResult<DevArticle[]> {\n  return useQuery(\n    'dev',\n    async (): Promise<DevArticle[]> => {\n      const response: Response = await fetch(\n        'https://dev.to/api/articles?username=charlesstover',\n      );\n      return await response.json();\n    },\n  );\n}\n","import { UseQueryResult, useQuery } from 'react-query';\nimport MediumArticle from '../types/medium-article';\n\nexport default function useMediumStats(): UseQueryResult<\n  Record<string, MediumArticle>\n> {\n  return useQuery(\n    'medium',\n    async (): Promise<Record<string, MediumArticle>> => {\n      const response: Response = await fetch(\n        process.env.REACT_APP_MEDIUM_STATS ||\n          'https://medium.cscdn.net/charles-stover.json',\n      );\n      return await response.json();\n    },\n  );\n}\n","import { SelectProps } from '@awsui/components-react/select';\nimport { TranslateFunction, useTranslate } from 'lazy-i18n';\nimport { useMemo } from 'react';\nimport PublicationCardsSort from '../../constants/publication-cards-sort';\n\nexport default function usePublicationCardsSortOptions(): SelectProps.Options {\n  const translate: TranslateFunction = useTranslate();\n\n  return useMemo(\n    (): SelectProps.Options => [\n      {\n        label: translate('Publication date') || '...',\n        value: PublicationCardsSort.PublicationDate,\n      },\n      {\n        label: translate('Reactions') || '...',\n        value: PublicationCardsSort.Reactions,\n      },\n      {\n        label: translate('Reactions per day') || '...',\n        value: PublicationCardsSort.ReactionsPerDay,\n      },\n      {\n        label: translate('Reactions per view') || '...',\n        value: PublicationCardsSort.ReactionsPerView,\n      },\n      {\n        label: translate('Reading time') || '...',\n        value: PublicationCardsSort.ReadingTime,\n      },\n      {\n        label: translate('Views') || '...',\n        value: PublicationCardsSort.Views,\n      },\n      {\n        label: translate('Views per day') || '...',\n        value: PublicationCardsSort.ViewsPerDay,\n      },\n    ],\n    [translate],\n  );\n}\n","import { useMemo } from 'react';\nimport DevArticle from '../../types/dev-article';\nimport MediumArticle from '../../types/medium-article';\nimport PublicationCardItem from '../../types/publication-card-item';\n\ninterface Props {\n  devData?: DevArticle[];\n  mediumData?: Record<string, MediumArticle>;\n}\n\nexport default function usePublicationCardsItems({\n  devData,\n  mediumData,\n}: Props): PublicationCardItem[] {\n  return useMemo((): PublicationCardItem[] => {\n    const newItems: PublicationCardItem[] = [];\n    let totalReactions = 0;\n    let totalViews = 0;\n    if (typeof mediumData !== 'undefined') {\n      for (const [\n        slug,\n        {\n          claps,\n          firstPublishedAt,\n          postId,\n          previewImage,\n          readingTime,\n          reads,\n          title,\n          updateNotificationSubscribers,\n          upvotes,\n          views,\n        },\n      ] of Object.entries(mediumData)) {\n        const reactions: number =\n          claps + updateNotificationSubscribers + upvotes;\n        totalReactions += reactions;\n        totalViews += reads;\n        newItems.push({\n          dateTime: firstPublishedAt,\n          image:\n            previewImage && `https://miro.medium.com/max/320/${previewImage}`,\n          reactions,\n          readingTime,\n          title,\n          type: 'medium',\n          url: `https://charles-stover.medium.com/${slug}-${postId}`,\n          views,\n        });\n      }\n    }\n\n    const averageViewsPerReaction = totalViews / totalReactions;\n    if (typeof devData !== 'undefined') {\n      for (const {\n        canonical_url,\n        comments_count,\n        public_reactions_count,\n        published_timestamp,\n        social_image,\n        title,\n        url,\n      } of devData) {\n        const findExistingItem = ({\n          url: existingUrl,\n        }: PublicationCardItem): boolean => existingUrl === canonical_url;\n        const existingItem: PublicationCardItem | undefined = newItems.find(\n          findExistingItem,\n        );\n        const reactions: number = comments_count + public_reactions_count;\n        const views: number = Math.round(reactions * averageViewsPerReaction);\n        if (typeof existingItem !== 'undefined') {\n          existingItem.reactions += reactions;\n          existingItem.views += views;\n          continue;\n        }\n        newItems.push({\n          dateTime: new Date(published_timestamp).getTime(),\n          image: social_image,\n          reactions,\n          title,\n          type: 'dev',\n          url,\n          views,\n        });\n      }\n    }\n\n    return newItems;\n  }, [devData, mediumData]);\n}\n","import PublicationCardsSort from '../constants/publication-cards-sort';\nimport sortItemsByPublicationDate from '../sort/sort-publication-card-items-by-publication-date';\nimport sortItemsByReactions from '../sort/sort-publication-card-items-by-reactions';\nimport sortItemsByReactionsPerDay from '../sort/sort-publication-card-items-by-reactions-per-day';\nimport sortItemsByReactionsPerView from '../sort/sort-publication-card-items-by-reactions-per-view';\nimport sortItemsByReadingTime from '../sort/sort-publication-card-items-by-reading-time';\nimport sortItemsByViews from '../sort/sort-publication-card-items-by-views';\nimport sortItemsByViewsPerDay from '../sort/sort-publication-card-items-by-views-per-day';\nimport PublicationCardItem from '../types/publication-card-item';\n\ntype SortFunction<Item> = (a: Item, b: Item) => -1 | 0 | 1;\n\nexport default function mapPublicationCardsSortToFunction(\n  sort: PublicationCardsSort,\n): SortFunction<PublicationCardItem> {\n  switch (sort) {\n    case PublicationCardsSort.PublicationDate:\n      return sortItemsByPublicationDate;\n    case PublicationCardsSort.Reactions:\n      return sortItemsByReactions;\n    case PublicationCardsSort.ReactionsPerDay:\n      return sortItemsByReactionsPerDay;\n    case PublicationCardsSort.ReactionsPerView:\n      return sortItemsByReactionsPerView;\n    case PublicationCardsSort.ReadingTime:\n      return sortItemsByReadingTime;\n    case PublicationCardsSort.Views:\n      return sortItemsByViews;\n    case PublicationCardsSort.ViewsPerDay:\n      return sortItemsByViewsPerDay;\n  }\n}\n","import Alert from '@awsui/components-react/alert';\nimport Cards from '@awsui/components-react/cards';\nimport FormField from '@awsui/components-react/form-field';\nimport Header from '@awsui/components-react/header';\nimport Select from '@awsui/components-react/select';\nimport SpaceBetween from '@awsui/components-react/space-between';\nimport I18n from 'lazy-i18n';\nimport { ReactElement } from 'react';\nimport CARD_DEFINITION from '../../constants/publication-card-definition';\nimport usePublicationCards from './publication-cards.hook';\nimport styles from './publication-cards.module.scss';\n\nexport default function PublicationCards(): ReactElement {\n  const {\n    dismissAriaLabel,\n    handleAlertDismiss,\n    handleSortChange,\n    isAlertVisible,\n    items,\n    loading,\n    loadingText,\n    selectedSortOption,\n    sortOptions,\n    sortPlaceholder,\n  } = usePublicationCards();\n\n  return (\n    <>\n      <SpaceBetween direction=\"vertical\" size=\"m\">\n        {isAlertVisible && (\n          <Alert\n            dismissAriaLabel={dismissAriaLabel}\n            dismissible\n            onDismiss={handleAlertDismiss}\n            type=\"info\"\n            visible={true}\n          >\n            Only publications with more than 5,000 views are shown.\n          </Alert>\n        )}\n        <Cards\n          cardDefinition={CARD_DEFINITION}\n          items={items}\n          loading={loading}\n          loadingText={loadingText}\n          header={\n            <Header\n              actions={\n                <FormField\n                  className={styles.sort}\n                  label={<I18n>Sort by</I18n>}\n                  stretch\n                >\n                  <Select\n                    onChange={handleSortChange}\n                    options={sortOptions}\n                    placeholder={sortPlaceholder}\n                    selectedOption={selectedSortOption}\n                  />\n                </FormField>\n              }\n            >\n              <I18n>Publications</I18n>\n            </Header>\n          }\n        />\n      </SpaceBetween>\n    </>\n  );\n}\n"],"sourceRoot":""}